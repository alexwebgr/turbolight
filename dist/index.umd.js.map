{
  "version": 3,
  "sources": ["../src/index.js"],
  "sourcesContent": ["/**\n * TurboLight - A lightweight, vanilla JavaScript lightbox that works with Turbo Streams\n *\n * Features:\n * - Gallery support with navigation\n * - Keyboard navigation\n * - Caption support\n * - Counter display\n * - Multiple closing options\n * - Turbo compatibility\n */\nclass TurboLight {\n  constructor(options = {}) {\n    // Default options\n    this.options = Object.assign({\n      overlayClass: 'turbo-light-overlay',\n      containerClass: 'turbo-light-container',\n      imageClass: 'turbo-light-image',\n      captionClass: 'turbo-light-caption',\n      counterClass: 'turbo-light-counter',\n      closeClass: 'turbo-light-close',\n      prevClass: 'turbo-light-prev',\n      nextClass: 'turbo-light-next',\n      activeClass: 'turbo-light-active',\n      loadingClass: 'turbo-light-loading'\n    }, options);\n\n    // Initialize properties\n    this.galleries = {};\n    this.currentGallery = null;\n    this.currentIndex = 0;\n    this.isOpen = false;\n\n    // Bind methods to maintain 'this' context\n    this.handleClick = this.handleClick.bind(this);\n    this.close = this.close.bind(this);\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleBackgroundClick = this.handleBackgroundClick.bind(this);\n\n    // Store bound versions for event listener management\n    this.boundClose = this.close;\n    this.boundPrevious = this.previous;\n    this.boundNext = this.next;\n    this.boundHandleBackgroundClick = this.handleBackgroundClick;\n\n    // Initialize\n    this.init();\n  }\n\n  /**\n   * Initialize the lightbox\n   */\n  init() {\n    // Find all lightbox links and group them by gallery\n    this.findLinks();\n\n    // Create new lightbox elements\n    this.createLightboxElements();\n  }\n\n\n\n  /**\n   * Find all links with data-turbolight attribute and group them by gallery\n   */\n  findLinks() {\n    // Reset galleries\n    this.galleries = {};\n\n    // Find all links with data-turbolight attribute\n    const links = document.querySelectorAll('a[data-turbolight]');\n\n    // Group links by gallery\n    links.forEach(link => {\n      const galleryName = link.dataset.turbolight;\n      const title = link.dataset.title || '';\n      const href = link.getAttribute('href');\n\n      if (!this.galleries[galleryName]) {\n        this.galleries[galleryName] = [];\n      }\n\n      this.galleries[galleryName].push({\n        href,\n        title,\n        element: link\n      });\n\n      // Add click event listener\n      link.removeEventListener('click', this.handleClick);\n      link.addEventListener('click', this.handleClick);\n    });\n  }\n\n  /**\n   * Create the lightbox DOM elements\n   */\n  createLightboxElements() {\n    // Create overlay\n    this.overlay = document.createElement('div');\n    this.overlay.className = this.options.overlayClass;\n\n    // Create container for the image\n    this.container = document.createElement('div');\n    this.container.className = this.options.containerClass;\n\n    // Create image element\n    this.image = document.createElement('img');\n    this.image.className = this.options.imageClass;\n\n    // Create caption\n    this.caption = document.createElement('div');\n    this.caption.className = this.options.captionClass;\n\n    // Create counter\n    this.counter = document.createElement('div');\n    this.counter.className = this.options.counterClass;\n\n    // Create close button\n    this.closeButton = document.createElement('button');\n    this.closeButton.className = this.options.closeClass;\n    this.closeButton.innerHTML = '&times;';\n    this.closeButton.setAttribute('aria-label', 'Close lightbox');\n\n    // Create navigation buttons\n    this.prevButton = document.createElement('button');\n    this.prevButton.className = this.options.prevClass;\n    this.prevButton.innerHTML = '&#10094;';\n    this.prevButton.setAttribute('aria-label', 'Previous image');\n\n    this.nextButton = document.createElement('button');\n    this.nextButton.className = this.options.nextClass;\n    this.nextButton.innerHTML = '&#10095;';\n    this.nextButton.setAttribute('aria-label', 'Next image');\n\n    // Assemble the elements\n    this.container.appendChild(this.image);\n    this.container.appendChild(this.caption);\n    this.overlay.appendChild(this.container);\n    this.overlay.appendChild(this.counter);\n    this.overlay.appendChild(this.closeButton);\n    this.overlay.appendChild(this.prevButton);\n    this.overlay.appendChild(this.nextButton);\n\n    // Add event listeners with properly bound context\n    this.closeButton.addEventListener('click', this.boundClose);\n    this.prevButton.addEventListener('click', this.boundPrevious);\n    this.nextButton.addEventListener('click', this.boundNext);\n    this.overlay.addEventListener('click', this.boundHandleBackgroundClick);\n\n    // Add to document\n    document.body.appendChild(this.overlay);\n  }\n\n  /**\n   * Handle click on lightbox link\n   * @param {Event} event - Click event\n   */\n  handleClick(event) {\n    event.preventDefault();\n    const link = event.currentTarget;\n    this.open(link);\n  }\n\n  /**\n   * Open the lightbox with the specified link\n   * @param {HTMLElement} link - The link element that was clicked\n   */\n  open(link) {\n    // If the overlay was removed (after close), recreate the lightbox elements\n    if (!this.overlay) {\n      this.createLightboxElements();\n    }\n\n    // Get the gallery name and index\n    const galleryName = link.dataset.turbolight;\n    this.currentGallery = galleryName;\n    const gallery = this.galleries[galleryName];\n    const index = gallery.findIndex(item => item.element === link);\n\n    // Show the lightbox\n    this.overlay.classList.add(this.options.activeClass);\n    this.isOpen = true;\n\n    // Prevent body scrolling\n    document.body.style.overflow = 'hidden';\n\n    // Load the image\n    this.showImage(index);\n\n    // Add keyboard event listener\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  /**\n   * Close the lightbox and remove elements from DOM\n   */\n  close() {\n    if (!this.overlay) return;\n\n    // Hide the lightbox\n    this.overlay.remove();\n\n    // Remove keyboard event listener\n    document.removeEventListener('keydown', this.handleKeyDown);\n\n    // Restore body scrolling\n    document.body.style.overflow = '';\n\n    // Reset current state\n    this.isOpen = false;\n    this.currentGallery = null;\n    this.currentIndex = 0;\n    this.overlay = null;\n    this.container = null;\n    this.image = null;\n    this.caption = null;\n    this.counter = null;\n    this.closeButton = null;\n    this.prevButton = null;\n    this.nextButton = null;\n  }\n\n  /**\n   * Show the next image\n   */\n  next() {\n    if (!this.currentGallery) return;\n\n    const gallery = this.galleries[this.currentGallery];\n    let nextIndex = this.currentIndex + 1;\n\n    // Loop back to the beginning if at the end\n    if (nextIndex >= gallery.length) {\n      nextIndex = 0;\n    }\n\n    this.showImage(nextIndex);\n  }\n\n  /**\n   * Show the previous image\n   */\n  previous() {\n    if (!this.currentGallery) return;\n\n    const gallery = this.galleries[this.currentGallery];\n    let prevIndex = this.currentIndex - 1;\n\n    // Loop to the end if at the beginning\n    if (prevIndex < 0) {\n      prevIndex = gallery.length - 1;\n    }\n\n    this.showImage(prevIndex);\n  }\n\n  /**\n   * Show an image by index\n   * @param {number} index - Index of the image to show\n   */\n  showImage(index) {\n    if (!this.currentGallery) return;\n\n    const gallery = this.galleries[this.currentGallery];\n    if (index < 0 || index >= gallery.length) {\n      console.error(`Invalid index: ${index}`);\n      return;\n    }\n\n    // Update current index\n    this.currentIndex = index;\n\n    // Get the image data\n    const imageData = gallery[index];\n\n    // Show loading state\n    this.container.classList.add(this.options.loadingClass);\n\n    // Update the image\n    this.image.src = imageData.href;\n    this.image.onload = () => {\n      this.container.classList.remove(this.options.loadingClass);\n    };\n\n    // Update the caption\n    this.caption.innerHTML = imageData.title || '';\n\n    // Update the counter\n    this.updateCounter();\n  }\n\n  /**\n   * Update the counter display\n   */\n  updateCounter() {\n    if (!this.currentGallery) return;\n\n    const gallery = this.galleries[this.currentGallery];\n    this.counter.textContent = `${this.currentIndex + 1} / ${gallery.length}`;\n  }\n\n  /**\n   * Handle keyboard events\n   * @param {KeyboardEvent} event\n   */\n  handleKeyDown(event) {\n    if (!this.isOpen) return;\n\n    switch (event.key) {\n      case 'Escape':\n        this.close();\n        break;\n      case 'ArrowLeft':\n        this.previous();\n        break;\n      case 'ArrowRight':\n        this.next();\n        break;\n    }\n  }\n\n  /**\n   * Handle click on the background\n   * @param {MouseEvent} event\n   */\n  handleBackgroundClick(event) {\n    // Close only if clicking directly on the overlay, not its children\n    if (event.target === this.overlay) {\n      this.close();\n    }\n  }\n}\n\n// Export for module usage\nexport default TurboLight;\n"],
  "mappings": "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",
  "names": []
}
